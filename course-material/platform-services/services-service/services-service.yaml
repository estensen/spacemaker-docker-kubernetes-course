---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: services-service
  namespace: kube-system
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: services-service
  template:
    metadata:
      labels:
        app: services-service
    spec:
      serviceAccountName: services-service
      containers:
      - name: services-service
        resources:
          limits:
            cpu: 300m
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 200Mi
        image: larseen/services-service:latest
        imagePullPolicy: Always
        env:
          - name: IN_CLUSTER
            value: "1"
          - name: URL
            value: http://abakus.spacemaker.ai/services
        ports:
        - containerPort: 8000
---
kind: Service
apiVersion: v1
metadata:
  name: services-service
  namespace: kube-system
spec:
  selector:
    app: services-service
  ports:
  - protocol: TCP
    port: 8000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: services-service
  namespace: kube-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /services
        backend:
          serviceName: services-service
          servicePort: 8000
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: kube-system
  name: services-service
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: services-service
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: services-service
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: services-service
  apiGroup: ""
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: services-service
  namespace: kube-system